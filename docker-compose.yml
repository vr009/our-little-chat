version: '3.9'

services:
  flusher:
    build:
      context: .
      dockerfile: deployments/flusher.Dockerfile
    command: ./flusher-service
    environment:
      FLUSHER_PERIOD: "60"
      FLUSHER_PORT: "8082"
      REDIS_PORT: "6379"
      REDIS_HOST: "db-peer"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      DATABASE_URL: "user=service password=${REDIS_PASSWORD} host=db-chat port=5432 dbname=chats"
    ports:
      - 8082:8082
    depends_on:
      - db-peer
      - db-chat

  chat:
    build:
      context: .
      dockerfile: deployments/chat.Dockerfile
    command: ./chat-service
    environment:
      DATABASE_URL: "user=service password=${PG_CHAT_PASSWORD} host=db-chat port=5432 dbname=chats"
      DATABASE_ALTERNATIVE_URL: "postgresql://db-chat:5432/chats?user=service&password=test"
      JWT_SIGNED_KEY: "${JWT_SECRET}"
      CHAT_PORT: "8083"
      REDIS_PORT: "6379"
      REDIS_HOST: "db-peer"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      USER_DATA_BASE_URL: "http://user-data:8086"
      ADMIN_PASSWORD: "test"
      ADMIN_USER: "test"
      GRPC_USERS_SERVER_HOST: "user-data"
      GRPC_USERS_SERVER_PORT: ":50051"
    ports:
      - 8083:8083
    depends_on:
      - db-peer
      - db-chat

  peer:
    build:
      context: .
      dockerfile: deployments/peer.Dockerfile
    command: ./peer-service
    environment:
      REDIS_PORT: "6379"
      REDIS_HOST: "db-peer"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      PEER_PORT: "8089"
    ports:
      - 8089:8089
    depends_on:
      - db-peer

  call:
    build:
      context: .
      dockerfile: deployments/call.Dockerfile
    command: ./call-service
    environment:
      CALL_PORT: "8090"
    ports:
      - 8090:8090

  user-data:
    build:
      context: .
      dockerfile: ./deployments/user_data.Dockerfile
    environment:
      USER_DATA_PORT: "8086"
      JWT_SIGNED_KEY: "${JWT_SECRET}"
      DATABASE_URL: "user=service password=${PG_USER_DATA_PASSWORD} host=db-user-data port=5432 dbname=users"
      ADMIN_PASSWORD: "test"
      ADMIN_USER: "test"
      DATABASE_MAX_OPEN_CONNS: "10"
      DATABASE_MAX_IDLE_CONNS: "10"
      DATABASE_MAX_IDLE_TIME: "10m"
      GRPC_USERS_SERVER_PORT: ":50051"
    command: ./user-data-service
    ports:
      - 8086:8086
      - 50051:50051
    depends_on:
      - db-user-data

  db-peer:
    image: redis
    restart: always
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning --requirepass test

  db-user-data:
    image: postgres:13.3
    environment:
      POSTGRES_DB: users
      POSTGRES_USER: service
      POSTGRES_PASSWORD: "${PG_USER_DATA_PASSWORD}"
    volumes:
      - ./internal/user_data/db/migrations:/docker-entrypoint-initdb.d
    restart: unless-stopped
    ports:
      - 5432:5432

  db-chat:
    image: postgres:13.3
    environment:
      POSTGRES_DB: "chats"
      POSTGRES_USER: "service"
      POSTGRES_PASSWORD: "${PG_CHAT_PASSWORD}"
    volumes:
      - ./internal/chat/db/migrations:/docker-entrypoint-initdb.d
    restart: unless-stopped
    ports:
      - 5433:5432

  nginx:
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ./configs/:/etc/nginx/conf.d/
      - ./temp/dist/:/var/www/html/dist/
    depends_on:
      - user-data
      - peer
      - chat