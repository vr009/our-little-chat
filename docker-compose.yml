version: '3.9'

services:
  gateway:
    build:
      context: .
      dockerfile: deployments/gateway.Dockerfile
    environment:
      GATEWAY_CONFIG: configs/.
    command: ./gateway-service
    restart: unless-stopped
    ports:
      - 8080:8080
    depends_on:
      - auth
      - user-data

  message-core:
    build:
      context: .
      dockerfile: deployments/message_core.Dockerfile
    ports:
      - 3301:3301

  chat-diff-service:
    build:
      context: .
      dockerfile: deployments/chat_diff.Dockerfile
    environment:
      CHAT_DIFF_CONFIG: configs/.
    command: ./chat-diff-service
    ports:
      - 8081:8081
    depends_on:
      - message-core

  flusher-service:
    build:
      context: .
      dockerfile: deployments/flusher.Dockerfile
    command: ./flusher-service
    environment:
      FLUSHER_CONFIG: configs/.
    ports:
      - 8082:8082
    depends_on:
      - message-core
      - mongo-all

  chat-service:
    build:
      context: .
      dockerfile: deployments/chat.Dockerfile
    command: ./chat-service
    environment:
      CHAT_CONFIG: configs/.
    ports:
      - 8083:8083
    depends_on:
      - message-core
      - mongo-all

  peer:
    build:
      context: .
      dockerfile: deployments/peer.Dockerfile
    command: ./peer-service
    environment:
      PEER_CONFIG: configs/.
    ports:
      - 8084:8084
    depends_on:
      - message-core

  mongo-all:
    image: mongo
    ports:
      - 27017:27017

  auth:
    build:
      context: .
      dockerfile: deployments/auth.Dockerfile
    command: ./auth-service
    environment:
      AUTH_CONFIG: configs/.
    ports:
      - 8087:8087
    depends_on:
      - db-auth

  db-auth:
    image: redis:alpine
    command: redis-server
    volumes:
      - $PWD/redis-data:/var/lib/redis
      - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    restart: unless-stopped
    ports:
      - 6379:6379

  user-data:
    build:
      context: .
      dockerfile: ./deployments/user_data.Dockerfile
    environment:
      USER_DATA_CONFIG: configs/.
      DATABASE_URL: "user=service password=test host=db-user-data port=5432 dbname=persons"
    command: ./user-data-service
    ports:
      - 8086:8086
    depends_on:
      - db-user-data

  db-user-data:
    image: postgres:13.3
    environment:
      POSTGRES_DB: persons
      POSTGRES_USER: service
      POSTGRES_PASSWORD: test
    volumes:
      - ./internal/user_data/db/migrations:/docker-entrypoint-initdb.d
    restart: unless-stopped
    ports:
      - 5432:5432

  nginx:
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ./configs/:/etc/nginx/conf.d/
      - ./temp/dist/:/var/www/html/dist/
    depends_on:
      - gateway
      - user-data
      - auth
      - peer